import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'com.github.johnrengelman.shadow'
}

sourceSets {
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['resources']
    }
}

repositories {
    maven {
    	name 'minecraft'
    	url 'https://libraries.minecraft.net/'
    }
    maven {
    	name 'fabric'
    	url 'https://maven.fabricmc.net/'
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = 'Negativity'

dependencies {
    api project(':common')
    
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-screen-handler-api-v1:${project.fabric_version}"

    compileOnly 'io.netty:netty-all:4.1.79.Final'
}

compileJava.javaCompiler.set(
    javaToolchains.compilerFor { languageVersion = JavaLanguageVersion.of(17) }
)

java {
    withSourcesJar()
}

loom {
    serverOnlyMinecraftJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

shadowJar {
    archiveBaseName.set('NegativityFabric')
    archiveAppendix.set('common')
    archiveClassifier.set(null)

    dependencies {
        it.include(it.project(':common'))
    }

    from(project(':common').tasks.shadowJar)
}

build.dependsOn shadowJar

parent.tasks.named('shadowJar', ShadowJar) {
    it.from(shadowJar.outputs)
}

task prepareServer(type: Copy) {
    from shadowJar.outputs
    rename { 'negativity.jar' }
    def pluginDir = System.getProperty('plugins.dir')
    if (pluginDir == null) {
        enabled(false)
    } else {
        into pluginDir
    }
}
